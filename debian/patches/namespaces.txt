Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 xpyb (1.3.1-1+kdienes2) unstable; urgency=medium
 .
   * Fix xproto.RECTANGLE.
Author: Klee Dienes <klee@mit.edu>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- xpyb-1.3.1.orig/src/py_client.py
+++ xpyb-1.3.1/src/py_client.py
@@ -58,6 +58,32 @@ def _t(str):
     '''
     return str[-1]
 
+def _pt(str):
+    '''
+    Does Python-name conversion on a type tuple of strings.
+    '''
+
+    if len(str) == 1:
+        return str[0]
+
+    path, ext = str[:-1], str[-1]
+    path = [ x.lower() for x in path ]
+
+    assert (path[0] == 'xcb')
+
+    # xcbgen doesn't use 'xproto', but python does
+    if len(path) == 1:
+        path = ['xcb', 'xproto']
+
+    # If the module is one currently being generated, no need for namespace.
+    if path[-1] == module.namespace.header:
+        path = []
+
+    # Turns out we want 'xproto.RECTANGLE' and not 'xcb.xproto.RECTANGLE'.
+    path = path[1:]
+
+    return '.'.join(path + [ext])
+
 def _n(str):
     '''
     Does Python-name conversion on a single string fragment.
@@ -189,6 +215,8 @@ def _py_type_setup(self, name, postfix='
     Recurses into child fields and list member types.
     '''
     # Do all the various names in advance
+    if not (self.is_simple or self.is_pad) and not postfix:
+        self.py_reftype = _pt(name) + postfix
     self.py_type = _t(name) + postfix
 
     self.py_request_name = _t(name)
@@ -326,7 +354,7 @@ def _py_complex(self, name):
             _py('        self.%s = xcb.List(parent, offset, %s, %s, %d)', _n(field.field_name), _py_get_expr(field.type.expr), field.py_listtype, field.py_listsize)
             _py('        offset += len(self.%s.buf())', _n(field.field_name))
         elif field.type.is_container and field.type.fixed_size():
-            _py('        self.%s = %s(parent, offset, %s)', _n(field.field_name), field.py_type, field.type.size)
+            _py('        self.%s = %s(parent, offset, %s)', _n(field.field_name), field.type.py_reftype, field.type.size)
             _py('        offset += %s', field.type.size)
         else:
             _py('        self.%s = %s(parent, offset)', _n(field.field_name), field.py_type)
